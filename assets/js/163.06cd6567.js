(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{603:function(e,s,t){"use strict";t.r(s);var n=t(40),r=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"异常监控服务-sentry-部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异常监控服务-sentry-部署"}},[e._v("#")]),e._v(" 异常监控服务 Sentry 部署")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/getsentry/sentry",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentry"),t("OutboundLink")],1),e._v(" 是一个使用 python 写的异常监控服务，并有支持很多语言的 SDK。")]),e._v(" "),t("p",[e._v("这里有官方部署文档和 compose file: "),t("a",{attrs:{href:"https://github.com/getsentry/onpremise",target:"_blank",rel:"noopener noreferrer"}},[e._v("getsentry/onpremise"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("在当前部署 sentry 时 (2019/06/20)，文档处于这个 commit 的位置 "),t("a",{attrs:{href:"https://github.com/getsentry/onpremise/tree/ae39a61d4d8a8ec8b9fd7af9c1d64e80c9bdd640",target:"_blank",rel:"noopener noreferrer"}},[e._v("ae39a6"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("虽然每次部署服务时的首选是看看有没有官方以及社区 star 较多的 compose file，但是他们的 compose file 也是要大致看一看的")])]),e._v(" "),t("p",[e._v("本文链接: "),t("a",{attrs:{href:"https://shanyue.tech/op/deploy-sentry",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 docker 部署异常监控服务 sentry"),t("OutboundLink")],1)]),e._v(" "),t("blockquote",[t("p",[e._v("虽然这篇文章介绍 Sentry 的部署，但还是推荐 Saas 版，省了运维麻烦，而且功能也更加齐全")])]),e._v(" "),t("h2",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("ul",[t("li",[e._v("Docker 1.10.0+")]),e._v(" "),t("li",[e._v("Compose 1.17.0+ (optional)")]),e._v(" "),t("li",[e._v("最少 3G 的内存 (这是官方要求，以下经测试，消耗了 600MB 左右)")])]),e._v(" "),t("h2",{attrs:{id:"反向代理-可选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向代理-可选"}},[e._v("#")]),e._v(" 反向代理 (可选)")]),e._v(" "),t("p",[t("strong",[e._v("由于我使用了 "),t("code",[e._v("traefik")]),e._v(" 作为方向代理，直接修改 "),t("code",[e._v("docker-compose.yml")]),e._v("，添加 "),t("code",[e._v("label")]),e._v("，并把端口映射给隐去")])]),e._v(" "),t("p",[e._v("你需要把 "),t("code",[e._v("sentry.hostname.com")]),e._v(" 替换为你将要设置的域名")]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token important"}},[e._v("*defaults")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expose")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9000")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"traefik.frontend.rule=Host:sentry.hostname.com"')]),e._v("\n")])])]),t("p",[e._v("如果使用 "),t("code",[e._v("nginx")]),e._v(" 作为反向代理，设置 "),t("code",[e._v("proxy-pass")]),e._v(" 即可，不细讲。")]),e._v(" "),t("h2",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[e._v("#")]),e._v(" 部署")]),e._v(" "),t("p",[e._v("这里有官方部署文档和 compose file: "),t("a",{attrs:{href:"https://github.com/getsentry/onpremise",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/getsentry/onpremise"),t("OutboundLink")],1),e._v("，以下是我的部署命令")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装之前，先看一下内存使用情况")]),e._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("free")]),e._v(" -h\n              total        used        "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("free")]),e._v("      shared  buff/cache   available\nMem:           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".7G        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".0G        204M        140M        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(".5G        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(".2G\nSwap:            0B          0B          0B\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone git@github.com:getsentry/onpremise.git\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" onpremise\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 创建 name volume，方便持久化，其实挂载的时候指定目录也是一样的。")]),e._v("\n$ docker volume create --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("sentry-data "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" docker volume create --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("sentry-postgres\nsentry-data\nsentry-postgres\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# `-n` 代表不覆盖文件，可以理解为 `redis` 的 `setnx` 命令")]),e._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -n .env.example .env\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 生成 key 放到 .env 文件中")]),e._v("\n$ docker-compose run --rm web config generate-secret-key\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 生成数据库，并在这一步设置超级用户")]),e._v("\n$ docker-compose run --rm web upgrade\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启动服务")]),e._v("\n$ docker-compose up -d\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# docker ps 查看，启动成功，如果你没有设置 traefik，PORTS 那一列会把端口号映射到 Host")]),e._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v("\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                    NAMES\n0acc4dedf59f        onpremise_web            "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/entrypoint.sh run …"')]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(" seconds ago       Up "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" seconds        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9000")]),e._v("/tcp                 onpremise_web_1\n8eebadc9e2ff        onpremise_worker         "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/entrypoint.sh run …"')]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" minutes ago       Up "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" minutes        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9000")]),e._v("/tcp                 onpremise_worker_1\n9cce91ae40d3        onpremise_cron           "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/entrypoint.sh run …"')]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" minutes ago       Up "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" minutes        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9000")]),e._v("/tcp                 onpremise_cron_1\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看 Host 的内存消耗，与刚开始大约 600MB")]),e._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("free")]),e._v(" -h\n              total        used        "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("free")]),e._v("      shared  buff/cache   available\nMem:           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".7G        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".6G        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".0G        165M        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".1G        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".6G\nSwap:            0B          0B          0B\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 单独查看 sentry 的内存消耗，大约加起来 600MB，与刚才的数据相一致")]),e._v("\n$ docker stats "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("head")]),e._v(" -7\nCONTAINER ID        NAME                         CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS\n0acc4dedf59f        onpremise_web_1              "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               331MiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8.73")]),e._v("%               328kB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(".99MB      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(".68MB / 0B         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("19")]),e._v("\n8eebadc9e2ff        onpremise_worker_1           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("138")]),e._v(".3MiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.65")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(".69MB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(".54MB     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("34")]),e._v(".5MB / 0B         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v("\n9cce91ae40d3        onpremise_cron_1             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("97")]),e._v(".52MiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.57")]),e._v("%               869kB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".24MB      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("37")]),e._v(".8MB / 156kB      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n01788eef014f        onpremise_memcached_1        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v(".871MiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.23")]),e._v("%               261kB / 154kB       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("11")]),e._v(".2MB / 0B         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("\n66a27f681af3        onpremise_postgres_1         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(".297MiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.14")]),e._v("%               "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".94MB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".45MB     83MB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("96")]),e._v(".8MB       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\n645fd1e25d78        onpremise_smtp_1             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.00")]),e._v("%               800KiB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(".702GiB     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.02")]),e._v("%               672B / 0B           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(".27MB / "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("57")]),e._v(".3kB     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])])]),t("img",{attrs:{src:"https://raw.githubusercontent.com/shfshanyue/op-note/master/assets/sentry-memory.png",loading:"lazy"}}),e._v(" "),t("p",[e._v("从十五分钟的内存使用图表中可以看出部署完成后有一个尖峰，后逐渐平稳了下来。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/shfshanyue/op-note/master/assets/sentry-ok.jpg",alt:"部署成功"}})]),e._v(" "),t("p",[e._v("进入反向代理设置的域名 "),t("a",{attrs:{href:"http://sentry.hostname.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://sentry.hostname.com"),t("OutboundLink")],1),e._v("，部署成功")])])}),[],!1,null,null,null);s.default=r.exports}}]);