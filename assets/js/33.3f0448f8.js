(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{408:function(t,s,a){t.exports=a.p+"assets/img/log-requestid.3fe3baa3.png"},546:function(t,s,a){"use strict";a.r(s);var n=a(40),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("date: 2019-06-30 19:00")]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"node-中的全链路式日志标记及处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-中的全链路式日志标记及处理"}},[t._v("#")]),t._v(" Node 中的全链路式日志标记及处理")]),t._v(" "),n("p",[t._v("本篇文章开始之前先抛出两个问题:")]),t._v(" "),n("ol",[n("li",[t._v("当在客户端捕捉到一条异常请求时，如何有效地排查问题？")]),t._v(" "),n("li",[t._v("当在生产环境中发现某条 API 高延迟，又如何定位问题？")])]),t._v(" "),n("p",[t._v("从挂下来的蜘蛛丝可以找到蜘蛛的所在，从灶马爬过留下的痕迹可以查出灶马的去向。")]),t._v(" "),n("p",[t._v("而要更有效解决此类问题，我们需要依赖全链路式的日志作为蛛丝马迹。如当发现测试环境某条 API 延迟过高时，通过该 API 在日志系统中找到所涉及到的所有关键逻辑及数据库查询，查找是否 SQL 查询过多或其中有慢查询所致，或者是否被上游服务拖累。")]),t._v(" "),n("p",[t._v("在微服务架构中，标记全链路日志有助于更好的解决 bug 和分析接口性能，本篇文章介绍在 "),n("code",[t._v("Node")]),t._v(" 中如何标记全链路式日志")]),t._v(" "),n("h2",{attrs:{id:"当一个请求到来时-服务器端会产生哪些日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#当一个请求到来时-服务器端会产生哪些日志"}},[t._v("#")]),t._v(" 当一个请求到来时，服务器端会产生哪些日志")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("AccessLog")]),t._v(": 这是最常见的日志类型，一般在 "),n("code",[t._v("nginx")]),t._v(" 等方向代理中也有日志记录，但在业务系统中有时需要更详细的日志记录，如 API 耗时，详细的 request body 与 response body")]),t._v(" "),n("li",[n("code",[t._v("SQLLog")]),t._v(": 关于数据库查询的日志，记录 SQL、涉及到的 table、以及执行时间，"),n("strong",[t._v("从此可以筛选出执行过慢的SQL，也可以筛选出某条API对应的SQL条数")])]),t._v(" "),n("li",[n("code",[t._v("RequestLog")]),t._v(": 请求第三方服务产生的日志")]),t._v(" "),n("li",[n("code",[t._v("Exception")]),t._v(": 异常")]),t._v(" "),n("li",[n("code",[t._v("RedisLog")]),t._v(": 缓存，也有一些非缓存的操作如 "),n("code",[t._v("zset")]),t._v(" 及分布式锁等")]),t._v(" "),n("li",[n("code",[t._v("Message Queue Log")]),t._v(": 记录生产消息及消费消息的日志")]),t._v(" "),n("li",[n("code",[t._v("CronLog")]),t._v(": 记录定时任务执行的时间以及是否成功")]),t._v(" "),n("li",[t._v("关键业务逻辑")])]),t._v(" "),n("h2",{attrs:{id:"如何标记全链路上所有日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何标记全链路上所有日志"}},[t._v("#")]),t._v(" 如何标记全链路上所有日志")]),t._v(" "),n("p",[n("strong",[t._v("使用 "),n("code",[t._v("requestId")]),t._v(" 唯一标识每个请求，有时它又被称为 "),n("code",[t._v("sessionId")]),t._v(" 或者 "),n("code",[t._v("transactionId")]),t._v("，在更多情况下它被称作 "),n("code",[t._v("traceId")])])]),t._v(" "),n("p",[t._v("操作步骤如下")]),t._v(" "),n("ol",[n("li",[t._v("使用一个中间件获取 "),n("code",[t._v("requestId")]),t._v("，并存储到 "),n("code",[t._v("Context")]),t._v(" 中。中间件通过读取请求头 "),n("code",[t._v("X-Request-Id")]),t._v(" 来获取，如果请求方未设置，则自动生成")]),t._v(" "),n("li",[t._v("使 "),n("code",[t._v("requestId")]),t._v(" 在整个链路进行手动传递，如读取 "),n("code",[t._v("context.requestId")]),t._v("，手动注入到 "),n("code",[t._v("ORM")]),t._v(" 进行SQL查询的日志中")])]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关于处理 requestId 的 koa middleware")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("context")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KoaContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从前端获取到 requestId，如果前端没有，则自己生成随机Id")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" requestId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-request-id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uuid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 requestId 的响应头")]),t._v("\n  ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X-Request-Id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requestId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储到 Context 中")]),t._v("\n  ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requestId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requestId\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/todos/:id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByPk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("logging")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      loger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从 Context 中获取信息手动传递 requestId")]),t._v("\n        requestId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requestId\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("显而易见，这样手动层层传递很繁琐，特别是在崇尚分层的服务器架构中，这样可能需要传递五六层")]),t._v(" 此时需要以更小侵入性的方式来标记 requestId")]),t._v(" "),n("h2",{attrs:{id:"降低侵入性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#降低侵入性"}},[t._v("#")]),t._v(" 降低侵入性")]),t._v(" "),n("p",[t._v("如上，在每次数据库查询时手动对 "),n("code",[t._v("requestId")]),t._v(" 进行标记过于繁琐，何况除了与数据库交互，还要有诸多微服务进行交互。")]),t._v(" "),n("p",[t._v("此时可以统一设计 "),n("code",[t._v("logger")]),t._v(" 函数进行标记，并且使用 "),n("code",[t._v("CLS (Continues Local Storage)")]),t._v(" 来管理异步资源中的 "),n("code",[t._v("requestId")]),t._v("。")]),t._v(" "),n("p",[t._v("关于 "),n("code",[t._v("CLS")]),t._v(" 的实现，实例中用到了 "),n("code",[t._v("cls-hooked")]),t._v("，它关于异步资源生命周期追踪的原理是 "),n("code",[t._v("async_hooks")]),t._v("。")]),t._v(" "),n("ul",[n("li",[t._v("通过 "),n("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("async_hooks"),n("OutboundLink")],1),t._v(" 可以追踪异步行为的生命周期")]),t._v(" "),n("li",[t._v("通过 "),n("a",{attrs:{href:"https://github.com/Jeff-Lewis/cls-hooked",target:"_blank",rel:"noopener noreferrer"}},[t._v("cls-hooked"),n("OutboundLink")],1),t._v(" 可以获得每次异步请求的 requestId")])]),t._v(" "),n("p",[t._v("如下代码中")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("lib/session.ts")]),t._v(": CLS 异步资源存储")]),t._v(" "),n("li",[n("code",[t._v("middleware/session.ts")]),t._v(": 关于 requestId 的中间件，从客户端获取 requestId，并存入 CLS 中")]),t._v(" "),n("li",[n("code",[t._v("lib/logger.ts")]),t._v(": 全局 logger，通过 CLS 注入 requestId，可参考上一章 "),n("a",{attrs:{href:"https://shanyue.tech/node/log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何在 Node 中高效地打日志"),n("OutboundLink")],1)])]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lib/session.ts")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createNamespace "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cls-hooked'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNamespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" session "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// middleware/session.ts")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("session")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KoaContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("runPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 requestId")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" requestId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-request-id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uuid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X-Request-ID'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requestId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CLS 中设置 requestId")]),t._v("\n    session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'requestId'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requestId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lib/logger.ts")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" winston"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" format "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'winston'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" requestId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次自动获取 requestId")]),t._v("\n  info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requestId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'requestId'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" info\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" logger "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" winston"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  format"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),n("p",[t._v("如果你使用过 "),n("code",[t._v("zipkin")]),t._v("，一款全链路式日志分析工具的话，它其中也是用了 "),n("code",[t._v("CLS")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zipkin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zipkin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In Node.js, the recommended context API to use is zipkin-context-cls.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CLSContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zipkin-context-cls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ctxImpl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLSContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if you want to use CLS")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xtxImpl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("zipkin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExplicitContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Alternative; if you want to pass around the context manually")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tracer will be a one to many relationship with instrumentation that use it (like express)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tracer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("zipkin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tracer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctxImpl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the in-process context")]),t._v("\n  recorder"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("zipkin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConsoleRecorder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For easy debugging. You probably want to use an actual implementation, like Kafka or AWS SQS.")]),t._v("\n  sampler"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("zipkin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sampler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CountingSampler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sample rate 0.01 will sample 1 % of all incoming requests")]),t._v("\n  traceId128Bit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to generate 128-bit trace IDs. 64-bit (false) is default")]),t._v("\n  localServiceName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-service'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// indicates this node in your service graph")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("关于 async_hooks 及 CLS 的实现可参考下一章节")])]),t._v(" "),n("h2",{attrs:{id:"如何从全链路日志中得益"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何从全链路日志中得益"}},[t._v("#")]),t._v(" 如何从全链路日志中得益")]),t._v(" "),n("ol",[n("li",[t._v("当 "),n("code",[t._v("sentry")]),t._v(" (警报系统) 中收到一条异常警报时，通过 "),n("code",[t._v("requestId")]),t._v(" 可以在 "),n("code",[t._v("elk")]),t._v(" (日志系统) 中获取到关于该异常的所有关键日志 (sql, redis, 关键函数的输入输出)")]),t._v(" "),n("li",[t._v("当客户端一条请求过慢时，通过请求头获取到的 "),n("code",[t._v("requestId")]),t._v(" 可以在 "),n("code",[t._v("elk")]),t._v(" 中分析该请求的所有数据库查询时间，请求响应时间，缓存是否命中等指标")]),t._v(" "),n("li",[t._v("查找 API 对应执行的 SQL 语句以及条数，判断是否有冗余 SQL 语句的查询")])]),t._v(" "),n("p",[t._v("如下图，通过 "),n("code",[t._v("requestId")]),t._v(" 涉及到的数据库查询的日志 (关于真实 SQL 做了隐藏处理)")]),t._v(" "),n("p",[n("img",{attrs:{src:a(408),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"从全链路分析各阶段耗时"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从全链路分析各阶段耗时"}},[t._v("#")]),t._v(" 从全链路分析各阶段耗时")]),t._v(" "),n("p",[t._v("以上只是完善了全链路式日志，如果要查看全链路各个阶段的耗时如何做？")]),t._v(" "),n("p",[t._v("此时就需要接入全链路式分析平台，如")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zipkin.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("zipkin"),n("OutboundLink")],1),t._v(": Zipkin is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in service architectures. Features include both the collection and lookup of this data.")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.jaegertracing.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jaeger"),n("OutboundLink")],1),t._v(": open source, end-to-end distributed tracing")])]),t._v(" "),n("p",[t._v("下一章讲解如何接入 "),n("code",[t._v("zikin")]),t._v(" 及相关代码与操作")])])}),[],!1,null,null,null);s.default=e.exports}}]);