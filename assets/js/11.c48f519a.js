(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{429:function(t,s,a){t.exports=a.p+"assets/img/eslint.545306c1.jpg"},430:function(t,s,a){t.exports=a.p+"assets/img/eslint-vscode.4ff3b494.jpg"},431:function(t,s,a){t.exports=a.p+"assets/img/eslint-tip.8b8293a3.jpg"},584:function(t,s,a){"use strict";a.r(s);var n=a(40),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"团队编码规范约束最佳实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#团队编码规范约束最佳实践"}},[t._v("#")]),t._v(" 团队编码规范约束最佳实践")]),t._v(" "),n("p",[t._v("一千个读者，就有一千个哈姆雷特。")]),t._v(" "),n("p",[t._v("一千个程序员，就有一千种代码风格。")]),t._v(" "),n("p",[t._v("那什么是代码风格呢？从小的来说，有的开发喜欢带分号，有的不喜欢带分号。有的喜欢使用空格，有的喜欢使用 Tab。有的喜欢空两个空格，有的喜欢四个空格。除了这些，还有一些关于代码的优化，如避免声明未使用，避免冗余的代码逻辑等。如果你是新参加工作的人员，又恰好遇到一个代码风格混乱，密密麻麻赋值前后都不带空格的项目，只能有苦难言了。")]),t._v(" "),n("p",[t._v("因此团队合作中需要统一规范。")]),t._v(" "),n("h2",{attrs:{id:"eslint-与约束"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-与约束"}},[t._v("#")]),t._v(" ESLint 与约束")]),t._v(" "),n("p",[t._v("统一编码规范不仅可以大幅提高代码可读性，甚至会提高代码质量。当我们设计了一套关于编码规范的规则集时，需要工具去辅助检测，这就是 "),n("code",[t._v("ESLint")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" eslint --save-dev\n")])])]),n("p",[t._v("规则集需要统一集中配置，ESLint 会默认读取配置文件 "),n("code",[t._v(".eslintrc")]),t._v(" 来解析，而规则集在 "),n("code",[t._v("rules")]),t._v(" 中进行配置：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"semi"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("而我们需要做的是设定我们的代码规范，即 "),n("code",[t._v("rules")]),t._v(" 项，关于它的文档及最佳实践参考下文：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint Rules and Best Practices"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"不要重复造轮子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不要重复造轮子"}},[t._v("#")]),t._v(" 不要重复造轮子")]),t._v(" "),n("p",[t._v("我们需要推到重来，设计属于自己团队的一套编码规范吗？")]),t._v(" "),n("p",[t._v("完全没有必要推倒重来，既耗费人力，又难以做到规则的全部覆盖。")]),t._v(" "),n("p",[t._v("很多优秀的团队，都根据最佳实践设定了特别优秀的编码规范，比如 "),n("code",[t._v("airbnb")]),t._v(" 设定了一套约束特别强的规范。另外也有一些特别简单但却十分实用的规范，如 "),n("code",[t._v("eslint:recommended")]),t._v("。")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("airbnb javascript style"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("我们仅仅需要使用 "),n("code",[t._v("extend")]),t._v(" 配置项去继承一些优秀的开源的代码规范，并使用 "),n("code",[t._v("rules")]),t._v(" 做一些自己团队的规则补充。")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extend"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airbnb-base"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"semi"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"开发环境-生产环境与警告"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发环境-生产环境与警告"}},[t._v("#")]),t._v(" 开发环境，生产环境与警告")]),t._v(" "),n("p",[t._v("开发环境对于开发而言重要的是什么？")]),t._v(" "),n("p",[t._v("是开发体验。")]),t._v(" "),n("p",[t._v("一个良好的编码规范会带来解放强迫症的舒适感，但过于严格的代码风格有时也会使人烦躁。试举两个小例子，有可能是在你写代码时出现过的场景：")]),t._v(" "),n("ol",[n("li",[t._v("禁止掉 "),n("code",[t._v("console.log")]),t._v("，避免在生产环境输出多余的东西。但偏偏在测试环境经常需要调试，但是如果仅仅设为警告的话，警告又会被忽视，失去意义。")]),t._v(" "),n("li",[t._v("特别是当设置了规则 "),n("code",[t._v("no-unused-vars")]),t._v(" 时。如果仅仅是为了在开发时调试，却因为无法通过 ESlint 规则校验无法方便调试。")])]),t._v(" "),n("p",[t._v("这是一个约束与自由的权衡，ESLint 在提供强有力约束时自然会牺牲一些开发上的便利性。中庸，儒家思想讲究中庸，此时可以在权衡下选择一个中庸的方案：")]),t._v(" "),n("p",[t._v("把 ESLint 的所有影响调试的规则校验都设置为 "),n("code",[t._v("Warn")]),t._v("，那你又问了警告往往不是会被忽略吗？是这样子的，所以需要在 CI 中设置环境变量 "),n("code",[t._v("CI=true")]),t._v("，如此在 CI 中即使有警告也无法交付。CI 指持续集成，在本篇文章后边也会接着提到，另外，在本系列文章中也会重点讲解 CI，欢迎持续关注。")]),t._v(" "),n("p",[t._v("如在 "),n("code",[t._v("create-react-app")]),t._v(" 中的大部分规则都是设置为 "),n("code",[t._v("Warn")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(429),alt:""}})]),t._v(" "),n("p",[t._v("但是，如果你使用了 "),n("code",[t._v("webpack")]),t._v("，并且结合 "),n("code",[t._v("eslint-loader")]),t._v("，那解决方案就更加简单了：使用 "),n("code",[t._v("emitWarning: true")]),t._v("，在测试环境把所有 "),n("code",[t._v("Error")]),t._v(" 都当做 "),n("code",[t._v("Warn")]),t._v("，这样避免了修改 ESLint 规则，"),n("code",[t._v("webpack")]),t._v(" 的配置如下")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.(js|mjs|jsx|ts|tsx)$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  enforce"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pre'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  use"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      options"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        emitWarning"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      loader"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint-loader'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("所以有两种权衡开发体验与编程规范的方式：")]),t._v(" "),n("ol",[n("li",[t._v("把 ESLint 的 rule 设置为 "),n("code",[t._v("Warn")]),t._v("，并在持续集成中配置环境变量 "),n("code",[t._v("CI=true")]),t._v("。")]),t._v(" "),n("li",[t._v("结合 webpack 与 "),n("code",[t._v("eslint-loader")]),t._v("，根据当前环境的环境变量配置 "),n("code",[t._v("emitWarning")]),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"第一层约束-ide"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一层约束-ide"}},[t._v("#")]),t._v(" 第一层约束: IDE")]),t._v(" "),n("p",[t._v("当不符合代码规范的第一时间，我们就要感知到它，及时反馈，快速纠正，比直到最后积攒了一大堆错误要高效很多。")]),t._v(" "),n("p",[t._v("这里以 "),n("code",[t._v("VS Code")]),t._v(" 作为示例，它只需要安装一个插件："),n("code",[t._v("eslint")]),t._v("，便可以做到智能提示，来看看效果吧：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(430),alt:""}})]),t._v(" "),n("p",[t._v("另外，配合 "),n("code",[t._v("eslint-loader")]),t._v("，使用浏览器也可以做到实时提示：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(431),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"第二层约束-git-hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二层约束-git-hooks"}},[t._v("#")]),t._v(" 第二层约束: Git Hooks")]),t._v(" "),n("p",[t._v("团队合作中的编码规范有一点是，虽然自己有可能不舒服，但是不能让别人因为自己的代码而不舒服。")]),t._v(" "),n("p",[t._v("git 自身包含许多 hooks，在 "),n("code",[t._v("commit")]),t._v("，"),n("code",[t._v("push")]),t._v(" 等 git 事件前后触发执行。与 "),n("code",[t._v("pre-commit hook")]),t._v(" 结合可以帮助校验 Lint，如果非通过代码规范则不允许提交。")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),n("OutboundLink")],1),t._v(" 是一个使 "),n("code",[t._v("git hooks")]),t._v(" 变得更简单的工具，只需要配置几行 "),n("code",[t._v("package.json")]),t._v(" 就可以愉快的开始工作。")]),t._v(" "),n("blockquote",[n("p",[t._v("husky 的原理是什么？")])]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint . --cache"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm lint"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("或者结合 "),n("a",{attrs:{href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[t._v("lint-staged"),n("OutboundLink")],1),t._v(" 调用校验规则")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.js|{lib,setup,bin,hot,tooling,schemas}/**/*.js|test/*.js|{test,examples}/**/webpack.config.js}"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{ts,json,yml,yaml,md}|examples/*.md"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --check"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.md|{.github,benchmark,bin,examples,hot,lib,schemas,setup,tooling}/**/*.{md,yml,yaml,js,json}"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cspell"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("不过做前端的都明白，客户端校验是不可信的，通过一条命令即可绕过 "),n("code",[t._v("git hooks")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -n\n")])])]),n("p",[n("img",{attrs:{src:"http://devhumor.com/content/uploads/images/July2017/client-side-validation.jpg",alt:""}})]),t._v(" "),n("h2",{attrs:{id:"第三层约束-ci"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三层约束-ci"}},[t._v("#")]),t._v(" 第三层约束: CI")]),t._v(" "),n("p",[n("code",[t._v("git hooks")]),t._v(" 可以绕过，但 CI(持续集成) 是绝对绕不过的，因为它在服务端校验。使用 "),n("code",[t._v("gitlab CI")]),t._v(" 做持续集成，配置文件 "),n("code",[t._v(".gitlab-ci.yaml")]),t._v(" 如下所示")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lint\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /^feature\\/."),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("*$/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm lint\n")])])]),n("h2",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ol",[n("li",[t._v("团队中代码规范统一是极有必要的")]),t._v(" "),n("li",[t._v("使用成熟的 eslint config，并做细节修改")]),t._v(" "),n("li",[t._v("设置部分 eslint rule 为警告，保障开发体验，并且在 "),n("code",[t._v("pre-commit")]),t._v(" 与 "),n("code",[t._v("CI")]),t._v(" 中把警告视为不通过，保证严格的代码规范")]),t._v(" "),n("li",[t._v("可以在 "),n("code",[t._v("IDE (vscode)")]),t._v("，"),n("code",[t._v("git hooks")]),t._v("，"),n("code",[t._v("CI")]),t._v(" 中添加三层规范校验拦截")]),t._v(" "),n("li",[t._v("可以使用 "),n("code",[t._v("husky")]),t._v(" 与 "),n("code",[t._v("lint-staged")]),t._v(" 很方便地做关于 lint 的 "),n("code",[t._v("git hooks")])]),t._v(" "),n("li",[n("code",[t._v("git hooks")]),t._v(" 的规范校验可以通过 "),n("code",[t._v("git commit -n")]),t._v(" 跳过，需要在 CI 层继续加强校验")])])])}),[],!1,null,null,null);s.default=e.exports}}]);