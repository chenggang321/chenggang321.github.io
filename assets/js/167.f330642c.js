(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{607:function(s,a,e){"use strict";e.r(a);var t=e(40),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker-简易入门"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-简易入门"}},[s._v("#")]),s._v(" docker 简易入门")]),s._v(" "),e("p",[e("code",[s._v("docker")]),s._v(" 使应用部署更加轻量，可移植，可扩展。更好的环境隔离也更大程度地避免了生产环境与测试环境不一致的巨大尴尬。由于 "),e("code",[s._v("docker")]),s._v(" 轻便可移植的特点也极大促进了 "),e("code",[s._v("CI/CD")]),s._v(" 的发展。")]),s._v(" "),e("ul",[e("li",[s._v("原文链接: "),e("a",{attrs:{href:"https://github.com/shfshanyue/op-note/blob/master/docker.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker简易入门"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("系列文章: "),e("a",{attrs:{href:"https://github.com/shfshanyue/op-note",target:"_blank",rel:"noopener noreferrer"}},[s._v("个人服务器运维指南"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"术语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[s._v("#")]),s._v(" 术语")]),s._v(" "),e("p",[e("code",[s._v("docker")]),s._v(" 的架构图如下")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://docs.docker.com/engine/images/architecture.svg",alt:"docker architecture"}})]),s._v(" "),e("p",[s._v("从图中可以看出几个组成部分")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("docker client")]),s._v(": 即 "),e("code",[s._v("docker")]),s._v(" 命令行工具")]),s._v(" "),e("li",[e("code",[s._v("docker host")]),s._v(": 宿主机，"),e("code",[s._v("docker daemon")]),s._v(" 的运行环境服务器")]),s._v(" "),e("li",[e("code",[s._v("docker daemon")]),s._v(": "),e("code",[s._v("docker")]),s._v(" 的守护进程，"),e("code",[s._v("docker client")]),s._v(" 通过命令行与 "),e("code",[s._v("docker daemon")]),s._v(" 交互")]),s._v(" "),e("li",[e("code",[s._v("container")]),s._v(": 最小型的一个操作系统环境，可以对各种服务以及应用容器化")]),s._v(" "),e("li",[e("code",[s._v("image")]),s._v(": 镜像，可以理解为一个容器的模板配置，通过一个镜像可以启动多个容器")]),s._v(" "),e("li",[e("code",[s._v("registry")]),s._v(": 镜像仓库，存储大量镜像，可以从镜像仓库拉取和推送镜像")])]),s._v(" "),e("h2",{attrs:{id:"安装-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[s._v("#")]),s._v(" 安装 docker")]),s._v(" "),e("blockquote",[e("p",[s._v("参考在 centos 上安装 docker 的官方文档: "),e("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/install/linux/docker-ce/centos/"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("以下是在 "),e("code",[s._v("centos")]),s._v(" 上安装 "),e("code",[s._v("docker")]),s._v(" 的命令示例过程")]),s._v(" "),e("p",[s._v("安装依赖")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils device-mapper-persistent-data lvm2\n")])])]),e("p",[s._v("添加 "),e("code",[s._v("docker")]),s._v(" 的yum镜像源，如果在国内，添加阿里云的镜像源")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 docker 官方的镜像源")]),s._v("\n$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果在国内，安装阿里云的镜像")]),s._v("\n$ yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),e("p",[s._v("安装指定版本的 "),e("code",[s._v("docker")]),s._v(" 并且启动服务")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 docker")]),s._v("\n$ yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装指定版本号的 docker，以下是 k8s 官方推荐的 docker 版本号 (此时，k8s 的版本号在 v1.16)")]),s._v("\n$ yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce-18.06.2.ce\n\n$ systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n\n$ systemctl start docker\n")])])]),e("p",[s._v("当 "),e("code",[s._v("docker")]),s._v(" 安装成功后，可以使用以下命令查看版本号")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ docker --version\nDocker version "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.06")]),s._v(".2-ce, build 6d37f41\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看更详细的版本号信息")]),s._v("\n$ docker version\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker的详细配置信息")]),s._v("\n$ docker info\n")])])]),e("h3",{attrs:{id:"守护进程配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#守护进程配置"}},[s._v("#")]),s._v(" 守护进程配置")]),s._v(" "),e("p",[e("code",[s._v("dockerd")]),s._v(" 是 "),e("code",[s._v("docker")]),s._v(" 的守护进程，"),e("code",[s._v("dockerd")]),s._v(" 可以通过配置文件进行配置，在 linux 下的配置文件位置在 "),e("code",[s._v("/etc/docker/daemon.json")]),s._v("，更详细内容可以参考 "),e("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/dockerd/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("日志引擎为 "),e("code",[s._v("json-file")]),s._v("，对日志结构化，结合合适的日志系统，方便定位日志。\n存储引擎为 "),e("code",[s._v("overrlay2")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /etc/docker\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 docker daemon")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/docker/daemon.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\n{\n  "exec-opts": ["native.cgroupdriver=systemd"],\n  "log-driver": "json-file",\n  "log-opts": {\n    "max-size": "100m"\n  },\n  "storage-driver": "overlay2",\n  "storage-opts": [\n    "overlay2.override_kernel_check=true"\n  ]\n}\nEOF')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 docker")]),s._v("\n$ systemctl daemon-reload\n$ systemctl restart docker\n")])])]),e("h2",{attrs:{id:"底层原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#底层原理"}},[s._v("#")]),s._v(" 底层原理")]),s._v(" "),e("p",[e("code",[s._v("docker")]),s._v(" 底层使用了一些 "),e("code",[s._v("linux")]),s._v(" 内核的特性，大概有 "),e("code",[s._v("namespace")]),s._v("，"),e("code",[s._v("cgroups")]),s._v(" 和 "),e("code",[s._v("ufs")])]),s._v(" "),e("h3",{attrs:{id:"namespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[s._v("#")]),s._v(" namespace")]),s._v(" "),e("p",[e("code",[s._v("docker")]),s._v(" 使用 "),e("code",[s._v("linux namespace")]),s._v(" 构建隔离的环境，它由以下 "),e("code",[s._v("namespace")]),s._v(" 组成")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("pid")]),s._v(": 隔离进程")]),s._v(" "),e("li",[e("code",[s._v("net")]),s._v(": 隔离网络")]),s._v(" "),e("li",[e("code",[s._v("ipc")]),s._v(": 隔离 IPC")]),s._v(" "),e("li",[e("code",[s._v("mnt")]),s._v(": 隔离文件系统挂载")]),s._v(" "),e("li",[e("code",[s._v("uts")]),s._v(": 隔离hostname")]),s._v(" "),e("li",[e("code",[s._v("user")]),s._v(": 隔离uid/gid")])]),s._v(" "),e("h3",{attrs:{id:"control-groups"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#control-groups"}},[s._v("#")]),s._v(" control groups")]),s._v(" "),e("p",[s._v("也叫 "),e("code",[s._v("cgroups")]),s._v("，限制资源配额，比如某个容器只能使用 "),e("code",[s._v("100M")]),s._v(" 内存")]),s._v(" "),e("h3",{attrs:{id:"union-file-systems"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#union-file-systems"}},[s._v("#")]),s._v(" Union file systems")]),s._v(" "),e("p",[e("code",[s._v("UnionFS")]),s._v(" 是一种分层、轻量级并且高性能的文件系统，支持对文件系统的修改作为一次提交来一层层的叠加。"),e("code",[s._v("docker")]),s._v(" 的镜像与容器就是分层存储，可用的存储引擎有 "),e("code",[s._v("aufs")]),s._v("，"),e("code",[s._v("overlay")]),s._v(" 等。")]),s._v(" "),e("p",[s._v("关于分层存储的详细内容可以查看官方文档 "),e("a",{attrs:{href:"https://docs.docker.com/storage/storagedriver/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker: About storage drivers"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[s._v("#")]),s._v(" 镜像")]),s._v(" "),e("p",[s._v("镜像是一份用来创造容器的配置文件，而容器可以视作最小型的一个操作系统。")]),s._v(" "),e("p",[e("strong",[e("code",[s._v("docker")]),s._v(" 的镜像和容器都使用了 "),e("code",[s._v("unionFS")]),s._v(" 做分层存储，镜像作为只读层是共享的，而容器在镜像之上附加了一层可写层，最大程度地减少了空间的浪费，详见下图")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://docs.docker.com/storage/storagedriver/images/sharing-layers.jpg",alt:"分层存储"}})]),s._v(" "),e("h3",{attrs:{id:"镜像仓库与拉取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像仓库与拉取"}},[s._v("#")]),s._v(" 镜像仓库与拉取")]),s._v(" "),e("p",[s._v("大部分时候，我们不需要自己构建镜像，我们可以在"),e("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方镜像仓库"),e("OutboundLink")],1),s._v("拉取镜像")]),s._v(" "),e("p",[s._v("可以简单使用命令 "),e("code",[s._v("docker pull")]),s._v(" 拉取镜像。拉取镜像后可以使用 "),e("code",[s._v("docker inspect")]),s._v(" 查看镜像信息")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加入拉取一个 node:alpine 的镜像")]),s._v("\n$ docker pull node:alpine\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看镜像信息")]),s._v("\n$ docker inspect node:alpine\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有镜像")]),s._v("\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nnode                alpine              f20a6d8b6721        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" days ago         105MB\nmongo               latest              965553e202a4        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago         363MB\ncentos              latest              9f38484d220f        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" months ago        202MB\n")])])]),e("h3",{attrs:{id:"构建镜像与发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像与发布"}},[s._v("#")]),s._v(" 构建镜像与发布")]),s._v(" "),e("p",[s._v("但并不是所有的镜像都可以在镜像仓库中找到，另外我们也需要为我们自己的业务应用去构建镜像。")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("docker build")]),s._v(" 构建镜像，"),e("strong",[e("code",[s._v("docker build")]),s._v(" 会使用当前目录的 "),e("code",[s._v("dockerfile")]),s._v(" 构建镜像")]),s._v("，至于 "),e("code",[s._v("dockerfile")]),s._v(" 的配置，参考下节。")]),s._v(" "),e("p",[e("code",[s._v("-t")]),s._v(" 指定标签")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t node-base:10: 镜像以及版本号")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .: 指当前路径")]),s._v("\n$ docker build -t node-base:10 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),e("p",[s._v("当构建镜像成功后可以使用 "),e("code",[s._v("docker push")]),s._v(" 推送到镜像仓库")]),s._v(" "),e("h2",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),e("p",[s._v("在使用 "),e("code",[s._v("docker")]),s._v(" 部署自己应用时，往往需要自己构建镜像。"),e("code",[s._v("docker")]),s._v(" 使用 "),e("code",[s._v("Dockerfile")]),s._v(" 作为配置文件构建镜像，简单看一个 "),e("code",[s._v("node")]),s._v(" 应用构建的 "),e("code",[s._v("dockerfile")])]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("alpine\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" package.json package"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("lock.json /code/\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /code\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("production\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /code\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n")])])]),e("h3",{attrs:{id:"from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" FROM")]),s._v(" "),e("p",[s._v("基于一个旧有的镜像，格式如下")]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AS <name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在多阶段构建时会用到")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AS <name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("h3",{attrs:{id:"add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),e("p",[s._v("把目录，或者 url 地址文件加入到镜像的文件系统中")]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("chown=<user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<group"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" <src"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" <dest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])])]),e("h3",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" RUN")]),s._v(" "),e("p",[s._v("执行命令，由于 "),e("code",[s._v("ufs")]),s._v(" 的文件系统，它会在当前镜像的顶层新增一层")]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" <command"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])])]),e("h3",{attrs:{id:"cmd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),e("p",[s._v("指定容器如何启动")]),s._v(" "),e("p",[e("strong",[s._v("一个 "),e("code",[s._v("Dockerfile")]),s._v(" 中只允许有一个 CMD")])]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec form, this is the preferred form")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as default parameters to ENTRYPOINT")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell form")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" command param1 param2\n")])])]),e("h2",{attrs:{id:"容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),e("p",[s._v("镜像与容器的关系，类似于代码与进程的关系。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("docker run")]),s._v(" 创建容器")]),s._v(" "),e("li",[e("code",[s._v("docker stop")]),s._v(" 停止容器")]),s._v(" "),e("li",[e("code",[s._v("docker rm")]),s._v(" 删除容器")])]),s._v(" "),e("h3",{attrs:{id:"创建容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[s._v("#")]),s._v(" 创建容器")]),s._v(" "),e("p",[s._v("基于 "),e("code",[s._v("nginx")]),s._v(" 镜像创建一个最简单的容器：启动一个最简单的 http 服务")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("docker run")]),s._v(" 来启动容器，"),e("code",[s._v("docker ps")]),s._v(" 查看容器启动状态")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ docker run -d --name nginx -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v(":80 nginx:alpine\n\n$ docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -l\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n404e88f0d90c        nginx:alpine         "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx -g \'daemon of…"')]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes ago       Up "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8888-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp     nginx\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n")])])]),e("p",[s._v("其中:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("-d")]),s._v(": 启动一个 "),e("code",[s._v("daemon")]),s._v(" 进程")]),s._v(" "),e("li",[e("code",[s._v("--name")]),s._v(": 为容器指定名称")]),s._v(" "),e("li",[e("code",[s._v("-p host-port:container-port")]),s._v(": 宿主机与容器端口映射，方便容器对外提供服务")]),s._v(" "),e("li",[e("code",[s._v("nginx:alpine")]),s._v(": 基于该镜像创建容器")])]),s._v(" "),e("p",[s._v("此时在宿主机使用 "),e("code",[s._v("curl")]),s._v(" 测试容器提供的服务是否正常")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" localhost:8888\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("DOCTYPE html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Welcome to nginx"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    body "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        width: 35em"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        margin: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" auto"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        font-family: Tahoma, Verdana, Arial, sans-serif"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/style"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Welcome to nginx"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("For online documentation and support please refer to\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.org/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.org"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("br/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCommercial support is available at\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.com/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("em"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Thank you "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" using nginx."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/em"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("那如果要进入容器环境中呢？使用 "),e("code",[s._v("docker exec -it container-name")]),s._v(" 命令")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ docker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it nginx "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),e("h3",{attrs:{id:"容器管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器管理"}},[s._v("#")]),s._v(" 容器管理")]),s._v(" "),e("p",[e("code",[s._v("docker ps")]),s._v(" 列出所有容器")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n404e88f0d90c        nginx:alpine         "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx -g \'daemon of…"')]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes ago       Up "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8888-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp     nginx\n498e7d74fb4f        nginx:alpine         "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx -g \'daemon of…"')]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" minutes ago       Up "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" minutes        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp                   lucid_mirzakhani\n2ce10556dc8f        redis:4.0.6-alpine   "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-entrypoint.s…"')]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        Up "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:6379-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("/tcp   apolloserverstarter_redis_1\n")])])]),e("p",[e("code",[s._v("docker port")]),s._v(" 查看容器端口映射")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ docker port nginx\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8888\n")])])]),e("p",[e("code",[s._v("docker stats")]),s._v(" 查看容器资源占用")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ docker stats nginx\nCONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS\n404e88f0d90c        nginx               "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("%               "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".395MiB / "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".796GiB   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.08")]),s._v("%               632B / "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".27kB       0B / 0B             "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);