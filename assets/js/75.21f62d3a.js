(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{485:function(e,s,t){"use strict";t.r(s);var n=t(40),r=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("在 k8s 支持的容器方案中除了 docker，还有其它容器方案")]),e._v(" "),t("ul",[t("li",[e._v("CRI-O")]),e._v(" "),t("li",[e._v("Containerd")])]),e._v(" "),t("p",[t("strong",[e._v("官方推荐的 docker 版本为: docker 18.06.2。在 k8s 的 master 与 node 节点都需要安装 docker。")])]),e._v(" "),t("h2",{attrs:{id:"安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[e._v("#")]),e._v(" 安装 docker")]),e._v(" "),t("blockquote",[t("p",[e._v("在 centos 上安装 docker 的官方文档: "),t("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/install/linux/docker-ce/centos/"),t("OutboundLink")],1)])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("$ yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y yum-utils device-mapper-persistent-data lvm2\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 docker 官方的镜像源")]),e._v("\n$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果在国内，安装阿里云的镜像")]),e._v("\n$ yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 docker")]),e._v("\n$ yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y docker-ce\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装指定版本号的 docker，以下是 k8s 官方推荐的 docker 版本号 (此时，k8s 的版本号在 v1.16)")]),e._v("\n$ yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y docker-ce-18.06.2.ce\n\n$ systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n\n$ systemctl start docker\n")])])]),t("p",[e._v("当 "),t("code",[e._v("docker")]),e._v(" 安装成功后，可以使用以下命令查看版本号")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("$ docker --version\nDocker version "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("18.06")]),e._v(".2-ce, build 6d37f41\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看更详细的版本号信息")]),e._v("\n$ docker version\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看docker的详细配置信息")]),e._v("\n$ docker info\n")])])]),t("h3",{attrs:{id:"docker-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-daemon"}},[e._v("#")]),e._v(" docker daemon")]),e._v(" "),t("p",[t("code",[e._v("dockerd")]),e._v(" 是 "),t("code",[e._v("docker")]),e._v(" 的后台进程，而 "),t("code",[e._v("dockerd")]),e._v(" 可以通过配置文件进行配置，在 linux 下在 "),t("code",[e._v("/etc/docker/daemon.json")]),e._v("，详细可以参考官方文档 "),t("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/dockerd/",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1),e._v("。")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" /etc/docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置 docker daemon")]),e._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('EOF\n{\n  "exec-opts": ["native.cgroupdriver=systemd"],\n  "log-driver": "json-file",\n  "log-opts": {\n    "max-size": "100m"\n  },\n  "storage-driver": "overlay2",\n  "storage-opts": [\n    "overlay2.override_kernel_check=true"\n  ]\n}\nEOF')]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 重启 docker")]),e._v("\n$ systemctl daemon-reload\n$ systemctl restart docker\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);