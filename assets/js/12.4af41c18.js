(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{446:function(e,t,r){e.exports=r.p+"assets/img/graphql.44363cf4.jpg"},447:function(e,t,r){e.exports=r.p+"assets/img/traefik.34be60c0.jpg"},448:function(e,t,r){e.exports=r.p+"assets/img/grafana.e4c7e897.jpg"},632:function(e,t,r){"use strict";r.r(t);var a=r(40),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("blockquote",[a("p",[e._v("记于一八年末")])]),e._v(" "),a("ul",[a("li",[e._v("原文地址: "),a("a",{attrs:{href:"https://shanyue.tech/op/when-server.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("当我有一台服务器时我做了什么"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("系列文章: "),a("a",{attrs:{href:"https://shanyue.tech/op",target:"_blank",rel:"noopener noreferrer"}},[e._v("当我有一台服务器时我做了什么"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"前端调研"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端调研"}},[e._v("#")]),e._v(" 前端调研")]),e._v(" "),a("p",[e._v("刚开始调研服务器渲染写了一个 demo，正好对诗词感兴趣，就做了一个关于诗词的站点，越写越大，demo 变成了 DEMO，总的来说还是特别简单。随手挂到了服务器下。")]),e._v(" "),a("p",[e._v("技术栈 👉 "),a("code",[e._v("Next.js")]),e._v(" + "),a("code",[e._v("React")]),e._v(" + "),a("code",[e._v("ApolloClient")]),e._v(" + "),a("code",[e._v("Docker")]),e._v(" + "),a("code",[e._v("Docker Compose")])]),e._v(" "),a("p",[e._v("网址如 👉 "),a("a",{attrs:{href:"https://shici.xiange.tech",target:"_blank",rel:"noopener noreferrer"}},[e._v("诗词弦歌"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("后来又把自己的博客挂了上去 👉 "),a("a",{attrs:{href:"https://shanyue.tech",target:"_blank",rel:"noopener noreferrer"}},[e._v("山月的博客"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"后端支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端支持"}},[e._v("#")]),e._v(" 后端支持")]),e._v(" "),a("p",[e._v("有了前端自然需要服务器端支持，遵循着简单方便好用易于上手的原则，在 parse-server 与 graphql 直接做抉择，最后选了 graphql。并做了一个半成品的脚手架。支持以下功能")]),e._v(" "),a("blockquote",[a("p",[e._v("半成品脚手架挂到了github https://github.com/shfshanyue/graphql-sequelize-starter")])]),e._v(" "),a("ul",[a("li",[e._v("N+1 query")]),e._v(" "),a("li",[e._v("对数据库字段的按需加载")]),e._v(" "),a("li",[e._v("对特定 field 缓存的中间件")]),e._v(" "),a("li",[e._v("接入 Sentry")]),e._v(" "),a("li",[e._v("接入 Consul kev/value store")]),e._v(" "),a("li",[e._v("jwt 做身份认证")]),e._v(" "),a("li",[e._v("结构化错误信息，并使用 sentry 报警")]),e._v(" "),a("li",[e._v("结构化日志信息，方便 elk 分析")]),e._v(" "),a("li",[e._v("Docker 与 Docker Compose")]),e._v(" "),a("li",[e._v("Traefik 做负载均衡(并没有)与反向代理")])]),e._v(" "),a("blockquote",[a("p",[e._v("这个脚手架在这里有一个活的示例 "),a("a",{attrs:{href:"https://todos.xiange.tech/playground",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://todos.xiange.tech/playground"),a("OutboundLink")],1),e._v("\n你需要先使用 shanyue/shanyue 做账号密码登录，登录的 mutation 是 createUserToken")])]),e._v(" "),a("p",[e._v("那时候顺手写了一个前端的半半半半半成品脚手架，"),a("a",{attrs:{href:"https://github.com/shfshanyue/react-apollo-starter",target:"_blank",rel:"noopener noreferrer"}},[e._v("shfshanyu/react-apollo-starter"),a("OutboundLink")],1),e._v("，不知道现在还能不能跑得起来......")]),e._v(" "),a("p",[e._v("技术栈 👉 Graphql + ApolloServer + Sequelize + Docker + JWT + (Traefik + Sentry + Consul)")]),e._v(" "),a("p",[a("img",{attrs:{src:r(446),alt:"graphql"}})]),e._v(" "),a("h2",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" Docker")]),e._v(" "),a("p",[e._v("部署的时候使用 docker + docker-compose，拉代码重启解决。也经常在上边做一些 docker 的测试")]),e._v(" "),a("h2",{attrs:{id:"数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[e._v("#")]),e._v(" 数据库")]),e._v(" "),a("p",[e._v("后端依赖于数据，于是又用 docker 部署了 redis 与 postgres")]),e._v(" "),a("p",[e._v("当你接入监控后你会发现 postgres 从刚开始到使用所占内存越来越大，这是有一部分数据从磁盘走到了内存。")]),e._v(" "),a("h2",{attrs:{id:"vpn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vpn"}},[e._v("#")]),e._v(" VPN")]),e._v(" "),a("p",[e._v("数据库放在公网访问有点危险，于是又用docker建了vpn在本地开发访问。使用了以下镜像")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/kylemanna/docker-openvpn",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker-openvpn"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("虽然配好了，但还是很懵逼，目前只控制了某个 cidr 段走 vpn")]),e._v(" "),a("h2",{attrs:{id:"配置服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置服务"}},[e._v("#")]),e._v(" 配置服务")]),e._v(" "),a("p",[e._v("后端需要配置服务，用 docker 部署了 consul，只用它的 key-value 存储，它的服务发现功能就这么被浪费掉了")]),e._v(" "),a("p",[e._v("直接裸机安装下载")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ consul agent -data-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/consul/data -config-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/consul/config -server -data-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/consul/data -advertise "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("172.17")]),e._v(".68.39 -bootstrap-expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" -node"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("consul-server -bind"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.0")]),e._v(".0.0 -client"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.0")]),e._v(".0.0 -ui\n")])])]),a("h2",{attrs:{id:"错误收集系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误收集系统"}},[e._v("#")]),e._v(" 错误收集系统")]),e._v(" "),a("p",[e._v("无论前端还是后端都需要一个错误收集系统，于是又用 docker 部署了 sentry")]),e._v(" "),a("p",[e._v("sentry 依赖于 redis，postgres，我直接把依赖指向了与我的站点公用的 redis 和 postgres。一来以后迁移是一个问题，二来错误日志过多甚至有可能把数据库给弄爆掉。不过不管了，我的站点也就我一个用户，没有人用就没有错误，没有错误就没有问题。")]),e._v(" "),a("h2",{attrs:{id:"反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[e._v("#")]),e._v(" 反向代理")]),e._v(" "),a("p",[e._v("前后端需要做一个反向代理，偶然选择了 traefik，至少比 nginx 多个漂亮的界面，更方便的服务配置，还可以做服务发现，缺点就是文档少")]),e._v(" "),a("p",[e._v("traefik 也直接在裸机安装，docker 起的直接配置 label，代理端口号直接使用 file。后来写了篇文章简单介绍了它")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/shfshanyue/blog/blob/master/Articles/Traefik/Readme.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Traefik 入手及简单配置"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("img",{attrs:{src:r(447),alt:"traefik"}})]),e._v(" "),a("p",[e._v("至于图上为什么有这么多请求，那是因为 "),a("code",[e._v("gitlab runner")]),e._v(" 每秒请求一次 gitlab。")]),e._v(" "),a("h2",{attrs:{id:"日志系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志系统"}},[e._v("#")]),e._v(" 日志系统")]),e._v(" "),a("p",[e._v("搭建了 elk。但鉴于目前访问最多的三个小伙伴分别是谷歌小蜘蛛，百度小蜘蛛以及我自己，自从搭建起来就没有使用过")]),e._v(" "),a("blockquote",[a("p",[e._v("参考搭建: "),a("a",{attrs:{href:"https://github.com/deviantony/docker-elk",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/deviantony/docker-elk"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("有可能还需要一个 file beats，但是还没弄过")]),e._v(" "),a("h2",{attrs:{id:"代码仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码仓库"}},[e._v("#")]),e._v(" 代码仓库")]),e._v(" "),a("p",[e._v("一些个人代码，学习记录，以及自己一些关于山水花草的笔记需要一个地方放，搭了一个 gitlab，不过 gitlab 吃了我两个多G的内存...")]),e._v(" "),a("p",[e._v("注意关掉 gitlab 的 "),a("code",[e._v("prometheus")]),e._v(" 等依赖，不然会吃很多内存")]),e._v(" "),a("h2",{attrs:{id:"ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ci"}},[e._v("#")]),e._v(" CI")]),e._v(" "),a("p",[e._v("搭建了 gitlab 以后，为了配套 gitlab，后又搭建了 gitlab-runner，做 CI/CD。")]),e._v(" "),a("p",[e._v("不过目前只有博客接入了 CI，因为只有博客是 CI 之后才搭建的，感觉最先开始的前后端项目要废掉...")]),e._v(" "),a("h2",{attrs:{id:"dns-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-server"}},[e._v("#")]),e._v(" DNS server")]),e._v(" "),a("p",[e._v("有了这么多的服务，但有的东西不好放在公网，如 consul，redis，postgres以及gitlab，又记不住端口号，所以又搭了一个 dns server，方便在本地访问")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" dnsmasq\n")])])]),a("h2",{attrs:{id:"文件编辑与窗口管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件编辑与窗口管理"}},[e._v("#")]),e._v(" 文件编辑与窗口管理")]),e._v(" "),a("p",[e._v("vim 和 tmux 在linux上是标配，提高在服务器的工作效率，建议使用源码编译安装。yum即使配置了epel，装的包版本也过低，且缺少很多功能。如 vim 打开文件目录。以下是我自己 vim 和 tmux 的配置")]),e._v(" "),a("ul",[a("li",[e._v("https://github.com/shfshanyue/vim-config")]),e._v(" "),a("li",[e._v("https://github.com/shfshanyue/tmux-config")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cloud.githubusercontent.com/assets/553208/9890797/8dffe542-5c02-11e5-9c06-a25b452e6fcc.gif",alt:"tmux"}})]),e._v(" "),a("h2",{attrs:{id:"自动化运维"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化运维"}},[e._v("#")]),e._v(" 自动化运维")]),e._v(" "),a("p",[e._v("初期折腾服务器的时候经常需要重装系统，并且我有两台服务器，自动化运维是必不可少的了。一般我用 ansible 做一些服务器的预配置，一些必备工具如 docker，git，vim，tmux，jq，auto-jump 的安装。")]),e._v(" "),a("p",[e._v("由于我的服务器都是 centos，playbook 写的有点糟糕。")]),e._v(" "),a("ul",[a("li",[e._v("https://github.com/shfshanyue/ansible-op")])]),e._v(" "),a("p",[e._v("不过服务器里大部分服务通过 docker-compose 管理，小部分工具通过 ansible role 管理，实在没有再自己写 ansible-playbook。")]),e._v(" "),a("p",[e._v("当你有了一台新服务器时，你可以遵循以下步骤")]),e._v(" "),a("ol",[a("li",[e._v("使用 ansible-role 预配置环境")]),e._v(" "),a("li",[e._v("如果没有 ansible-role，则自己写 ansible-playbook")]),e._v(" "),a("li",[e._v("对于一些服务使用 docker 进行安装")]),e._v(" "),a("li",[e._v("如果以上都无法解决，手动安装")])]),e._v(" "),a("h2",{attrs:{id:"监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控"}},[e._v("#")]),e._v(" 监控")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("prometheus")]),e._v(" + "),a("code",[e._v("node-exporter")]),e._v(" + "),a("code",[e._v("cadvisor")]),e._v(" 监控主机以及容器，使用 "),a("code",[e._v("grafana")]),e._v(" 做可视化")]),e._v(" "),a("p",[e._v("当你需要监控主机，容器或者数据库时，可以采用以下步骤")]),e._v(" "),a("ol",[a("li",[e._v("在 grafana 找一个 star 多的 Dashboard")]),e._v(" "),a("li",[e._v("根据需要微改一下")])]),e._v(" "),a("p",[a("img",{attrs:{src:r(448),alt:"grafana"}})]),e._v(" "),a("p",[e._v("自从用上了时序数据库，我的磁盘空间也日渐缩小")]),e._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),a("p",[e._v("简而言之，服务器还是以测试，学习和实践居多，后续应该会加入 k8s。")])])}),[],!1,null,null,null);t.default=s.exports}}]);