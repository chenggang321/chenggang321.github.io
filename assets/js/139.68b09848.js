(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{565:function(t,a,s){"use strict";s.r(a);var e=s(40),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"service-worker-实践与在-create-react-app-中所遇到的问题解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-worker-实践与在-create-react-app-中所遇到的问题解决方案"}},[t._v("#")]),t._v(" Service Worker 实践与在 create-react-app 中所遇到的问题解决方案")]),t._v(" "),s("h2",{attrs:{id:"缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),s("p",[s("code",[t._v("workbox")]),t._v(" 是 google 出的关于 service worker 生成预缓存列表，缓存策略，Background API 的一个库，综合了自家以前 "),s("code",[t._v("sw-toolbox")]),t._v(" 以及 "),s("code",[t._v("sw-precache")]),t._v(" 的功能。")]),t._v(" "),s("p",[s("code",[t._v("workbox")]),t._v(" 介绍了几种缓存策略，"),s("a",{attrs:{href:"https://developers.google.com/web/tools/workbox/modules/workbox-strategies",target:"_blank",rel:"noopener noreferrer"}},[t._v("workbox-strategies"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Service Worker Cookbook")]),t._v(" 也对这几种缓存策略做了介绍，"),s("a",{attrs:{href:"https://serviceworke.rs/caching-strategies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("caching-strategies"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("但是关于这些策略的原理以及如何使用，"),s("strong",[t._v("强烈推荐")]),t._v("谷歌开发者文档中的 "),s("a",{attrs:{href:"https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/",target:"_blank",rel:"noopener noreferrer"}},[t._v("离线指南"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("使用缓存，我们都会关心浏览器会提供多达的存储空间，以下代码可以查看你的应用已使用了多少存储空间以及有多大的配额")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("estimate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("info")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("usage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("另外也可以在 chrome 的 devtool 中进行查看，Application -> clear storage -> usage")]),t._v(" "),s("h2",{attrs:{id:"service-worker-in-react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-worker-in-react"}},[t._v("#")]),t._v(" Service Worker in React")]),t._v(" "),s("p",[t._v("如果项目采用 "),s("code",[t._v("create-react-app")]),t._v(" 脚手架搭建，内置了 "),s("code",[t._v("sw-precache-webpack-plugin")]),t._v(" 这个离线化插件，于是就对它做了一些适配。它是基于 google 的 "),s("a",{attrs:{href:"https://github.com/GoogleChrome/sw-precache",target:"_blank",rel:"noopener noreferrer"}},[t._v("sw-precache"),s("OutboundLink")],1),t._v(" 的一个插件。")]),t._v(" "),s("p",[t._v("如果你们项目没有使用 "),s("code",[t._v("create-react-app")]),t._v("，建议使用 "),s("code",[t._v("workbox")]),t._v(" 的 webpack Plugin，"),s("a",{attrs:{href:"https://workboxjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("workbox"),s("OutboundLink")],1),t._v(" 也是 google 新出的关于 service-worker 的工具。")]),t._v(" "),s("p",[t._v("如果你们的静态资源不在 CDN 上，Create React APP 已帮你写好了 webpack 的配置。")]),t._v(" "),s("p",[t._v("如果静态资源在 CDN 上，就要略微折腾一番了。")]),t._v(" "),s("h2",{attrs:{id:"静态资源在-cdn-上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态资源在-cdn-上"}},[t._v("#")]),t._v(" 静态资源在 CDN 上")]),t._v(" "),s("p",[s("code",[t._v("/index.html")]),t._v(" 与 "),s("code",[t._v("/sw.js")]),t._v(" 需要在同域下，引用 "),s("code",[t._v("/sw.js")]),t._v(" 时需要注意去掉 "),s("code",[t._v("PUBLIC_PATH (webpackConfig.output.publicPath)")]),t._v(" 的前缀。")]),t._v(" "),s("p",[t._v("另外 "),s("code",[t._v("sw-precache-webpack-plugin")]),t._v(" 生成 preCache 列表时，也会对 "),s("code",[t._v("/index.html")]),t._v(" 添加上 "),s("code",[t._v("PUBLIC_PATH")]),t._v(" 的前缀，需要替换掉，配置如下。其中 paths.appBuild 为 "),s("code",[t._v("webpackConfig.output.path")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mergeStaticsConfig"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stripPrefixMulti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("paths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("appBuild"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("/index.html")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/index.html'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以下是对于为何如此操作的源码分析")]),t._v(" "),s("p",[t._v("关于 "),s("code",[t._v("stripPrefixMulti")]),t._v(" ，可以查看 "),s("code",[t._v("sw-precache")]),t._v(" 的文档，"),s("a",{attrs:{href:"https://github.com/GoogleChromeLabs/sw-precache#stripprefixmulti-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("sw-precache#stripprefixmulti-object"),s("OutboundLink")],1),t._v("。主要是处理 precache 文件的前缀的，如以下 "),s("a",{attrs:{href:"https://github.com/GoogleChromeLabs/sw-precache/blob/5.2.1/lib/sw-precache.js#L170",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/GoogleChromeLabs/sw-precache/blob/5.2.1/lib/sw-precache.js#L170")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" relativeUrl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fileAndSizeAndHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stripPrefixMulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escapeRegExp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stripPrefixMulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以看出来它用来替换特定前缀。")]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("sw-precache-webpack-plugin")]),t._v(" 中已经对它做了一些处理，查看 "),s("a",{attrs:{href:"https://github.com/goldhand/sw-precache-webpack-plugin/blob/v0.11.5/src/index.js#L119",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/goldhand/sw-precache-webpack-plugin/blob/v0.11.5/src/index.js#L119")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outputPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// strip the webpack config's output.path (replace for windows users)")]),t._v("\n  stripPrefixMulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("outputPath"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sep"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" publicPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("它把 precache 文件列表的前缀全部替换为了 publicPath (即 webpackConfig.output.publicPath)，但是 "),s("code",[t._v("/index.html")]),t._v(" 不能在 cdn 的路径上，所以需要特殊配置一下。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("stripPrefixMulti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("paths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("appBuild"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("/index.html")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/index.html'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("根据正则的短路原则，刚好可以把 index.html 给替换回来。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(hello, world)|(hello)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shanyue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shanyue")]),t._v("\n")])])]),s("h2",{attrs:{id:"动态缓存-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态缓存-api"}},[t._v("#")]),t._v(" 动态缓存 API")]),t._v(" "),s("p",[t._v("对于静态资源，采取了所有静态资源添加hash，除部署后第一次外均不需再访问服务器。")]),t._v(" "),s("p",[t._v("如果这里采用 workbox 的术语的话，那么静态资源则是采用了 "),s("code",[t._v("Cache-First")]),t._v(" 的策略，当缓存不可取时才回退到网络，而对于动态 API，则采用 "),s("code",[t._v("Network-First")]),t._v(" 的策略，只有在离线状态下才使用缓存。")]),t._v(" "),s("p",[t._v("当然，如果你只想使用 service worker 做缓存控制的话，API 缓存就可以跳过了。")]),t._v(" "),s("p",[t._v("以下代码是 "),s("code",[t._v("sw-precache-webpack-plugin")]),t._v(" 的配置，动态缓存利用了 google 的 "),s("code",[t._v("sw-toolbox")]),t._v(" 工具，它提供了如 workbox 一样的缓存策略。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  runtimeCaching"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    urlPattern"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    handler"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'networkFirst'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"缓存-graphql-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存-graphql-query"}},[t._v("#")]),t._v(" 缓存 GraphQL query")]),t._v(" "),s("p",[t._v("GraphQL 的 query 是使用 http 的 POST 请求进行发送的，而 service worker 不支持对 POST 请求进行缓存。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/w3c/ServiceWorker/issues/693",target:"_blank",rel:"noopener noreferrer"}},[t._v("Replaying POST requests by w3c@ServiceWorker"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("其实一想很正常，POST 是非幂等的，连 http 也不对它进行缓存。")]),t._v(" "),s("p",[t._v("GraphQL 的 query 支持 GET 请求，修改为 GET 是可行的。另外一种方案是使用 "),s("a",{attrs:{href:"https://github.com/apollographql/apollo-cache-persist",target:"_blank",rel:"noopener noreferrer"}},[t._v("apollo-cache-persist"),s("OutboundLink")],1),t._v(" 对访问过的数据进行持久化。")]),t._v(" "),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),s("p",[t._v("关于前端项目在生产环境中部署的问题是一个比较工程化的问题，关于具体实现方案简单来说是如下两点")]),t._v(" "),s("ol",[s("li",[t._v("先部署资源，每次部署对静态资源添加 hash 到文件名中，带有hash的资源添加超长时间缓存(Cache-Control: public, max-age=31536000)，不带hash的资源配置 Etag，并配置 Cache-Control: no-cache")]),t._v(" "),s("li",[t._v("再部署页面，并配置 Cache-Control: no-cache")])]),t._v(" "),s("p",[t._v("可以参考以下两篇文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/webpack/use-long-term-caching",target:"_blank",rel:"noopener noreferrer"}},[t._v("Make use of long-term caching"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/fouber/blog/issues/6",target:"_blank",rel:"noopener noreferrer"}},[t._v("大公司里怎样开发和部署前端代码？"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("但是有了 Service Worker 之后有如下几个好处")]),t._v(" "),s("ol",[s("li",[t._v("部署资源与部署页面顺序可以不严格控制 (还是严格控制比较好一些)\n假设先部署页面，后部署资源，用户进入了新页面，但是资源没有更新，这时候 Service Worker 会在 install 事件中，由于无法找到新的资源而导致 install 失败，资源进行回退。")]),t._v(" "),s("li",[t._v("节省带宽\n以前用户每次访问页面，需要向服务器请求 /index.html 与一切不带 hash 的资源，现在所有的资源都被 sw-toolbox 或者 workbox 加上了指纹，每次只需要请求 /sw.js。")])]),t._v(" "),s("p",[t._v("注意要对 /sw.js 设置 "),s("code",[t._v("Cache-Control: no-cache")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"对比-http-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比-http-缓存"}},[t._v("#")]),t._v(" 对比 http 缓存")]),t._v(" "),s("p",[t._v("http 的缓存策略虽然是把静态资源缓存在浏览器中，但是缓存行为的控制却是在服务端的 - 如 http response 中的 Cache-Control。而 service worker 对缓存资源的控制权完全在浏览器手中，并且可以通过编程精度控制静态资源，动态请求的数据等。")]),t._v(" "),s("p",[t._v("但是这不代表 service worker 可以完全控制 http 进行缓存控制，因为 http 不仅仅缓存在浏览器中，还有代理缓存中。")]),t._v(" "),s("p",[t._v("在 http 的 Cache-Control 中有两个参数，private 和 public。private 代表不被 proxy 所缓存，区别详细如下")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/3492319/private-vs-public-in-cache-control",target:"_blank",rel:"noopener noreferrer"}},[t._v("Private vs Public in Cache-Control"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);